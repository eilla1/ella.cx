<canvas id="canvas" width="500" height="500"></canvas>

<script>
  // Set up Canvas
  const canvas = document.getElementById("canvas");
  const ctx = canvas.getContext("2d");
  ctx.strokeStyle = "black";

  // Generate fake elevation data
  const gridSize = 20;
  const elevationData = generateFakeElevationData(gridSize);

  // Define contour intervals
  const contourIntervals = [10, 20, 30, 40, 50, 60];

  // Draw contour lines
  for (const interval of contourIntervals) {
    ctx.beginPath();
    for (let y = 0; y < gridSize; y++) {
      for (let x = 0; x < gridSize; x++) {
        const elevation = elevationData[y][x];
        if (elevation === interval) {
          const px = x * 20;
          const py = y * 20;
          ctx.moveTo(px, py);
          // Draw line segments to neighbors (simplified)
          if (x < gridSize - 1 && elevationData[y][x + 1] === interval) {
            ctx.lineTo(px + 20, py);
          }
          if (y < gridSize - 1 && elevationData[y + 1][x] === interval) {
            ctx.lineTo(px, py + 20);
          }
        }
      }
    }
    ctx.stroke();
  }

  // Function to generate fake elevation data
  function generateFakeElevationData(size) {
    const elevationData = [];
    for (let y = 0; y < size; y++) {
      const row = [];
      for (let x = 0; x < size; x++) {
        row.push(Math.floor(Math.random() * 70) * 10); // Generate random elevation
      }
      elevationData.push(row);
    }
    return elevationData;
  }
</script>
